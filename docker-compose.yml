version: "3"
services:

  # NGINX & SSL setup
  nginx-web:
    image: nginx:1.13-alpine
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: peltarion_nginx
    volumes:
      - /data/nginx/peltarion/logs/:/var/log/nginx
      - /data/nginx/peltarion/conf.d:/etc/nginx/conf.d
      - /data/nginx/peltarion/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/peltarion/html:/usr/share/nginx/html
      - /data/nginx/peltarion/certs:/etc/nginx/certs:ro
      - /data/nginx/peltarion/htpasswd:/etc/nginx/htpasswd:ro
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - server

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup peltarion_nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: peltarion_gen
    restart: always
    volumes:
      - /data/nginx/peltarion/conf.d:/etc/nginx/conf.d
      - /data/nginx/peltarion/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/peltarion/html:/usr/share/nginx/html
      - /data/nginx/peltarion/certs:/etc/nginx/certs:ro
      - /data/nginx/peltarion/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    networks:
      - server

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: peltarion_encrypt
    restart: always
    volumes:
      - /data/nginx/peltarion/conf.d:/etc/nginx/conf.d
      - /data/nginx/peltarion/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/peltarion/html:/usr/share/nginx/html
      - /data/nginx/peltarion/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=peltarion_gen
      - NGINX_PROXY_CONTAINER=peltarion_nginx
      #- ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory # Staging for LetsEncrypt
    networks:
      - server

  # Application configuration and dependencies
  redis:
    image: redis:3.2-alpine
    volumes:
       - /data/redis/peltarion:/data
    restart: unless-stopped
    networks:
      - redis
    env_file:
      - ./.env

  service:
    image: enzomartin78/peltarion-code-test:master-latest
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_HOST=redis
      - VIRTUAL_PORT=3000
      - VIRTUAL_HOST=${HOST}
      - LETSENCRYPT_HOST=${HOST}
      - LETSENCRYPT_EMAIL=${EMAIL}
    restart: unless-stopped
    expose:
      - 3000
    depends_on:
      - redis
      - nginx-gen
    networks:
      - redis
      - server
    env_file:
      - ./.env

networks:
  redis:
  server:
